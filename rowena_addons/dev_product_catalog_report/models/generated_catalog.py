# -*- coding: utf-8 -*-
##############################################################################
#
#    OpenERP, Open Source Management Solution
#    Copyright (C) 2015 DevIntelle Consulting Service Pvt.Ltd (<http://www.devintellecs.com>).
#
#    For Module Support : devintelle@gmail.com  or Skype : devintelle
#
##############################################################################

from odoo import fields, models, api


class GeneratedCatalog(models.Model):
    _name = 'generated.catalog'
    _description = 'Generated Product Catalog'

    @api.model
    def create(self, vals):
        vals['name'] = self.env['ir.sequence'].next_by_code('catalog.sequence') or 'New'
        return super(GeneratedCatalog, self).create(vals)

    def unlink(self):
        res = super(GeneratedCatalog, self).unlink()
        for rec in self:
            attach_ids = rec.env['ir.attachment'].search([('res_id', '=', int(rec.id)),
                                                          ('res_model', '=', str(rec._name))])
            if attach_ids:
                attach_ids.unlink()
        return res

    def send_by_mail(self):
        self.ensure_one()
        attach_ids = self.env['ir.attachment'].search([('res_id', '=', int(self.id)),
                                                       ('res_model', '=', str(self._name))])
        ctx = {
            'default_model': 'generated.catalog',
            'default_res_id': self.ids[0],
            'default_composition_mode': 'comment',
            'force_email': True,
            'default_attachment_ids':  [(6, 0, attach_ids.ids)]
        }
        template_id = self.env.ref('dev_product_catalog_report.template_dev_product_catalog_report')
        if template_id:
            ctx.update({'default_template_id': template_id.id})
        return {
            'type': 'ir.actions.act_window',
            'view_mode': 'form',
            'res_model': 'mail.compose.message',
            'views': [(False, 'form')],
            'view_id': False,
            'target': 'new',
            'context': ctx,
        }

    def download_pdf(self):
        url = ('web/content/?model=generated.catalog&download=true&field=pdf_catalog_report&id=%s&filename=Catalog.pdf') % self.id
        return {'type': 'ir.actions.act_url',
                'url': url,
                'target': 'new'}

    name = fields.Char(string='Number')
    pdf_catalog_report = fields.Binary(string='Product Catalog Report')
    generated_on = fields.Datetime(string='Generated On')
    user_id = fields.Many2one('res.users', string='Generated By')
    filename = fields.Char(string='Filename', default='Catalog')

# vim:expandtab:smartindent:tabstop=4:softtabstop=4:shiftwidth=4: